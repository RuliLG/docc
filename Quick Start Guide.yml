Quick Start Guide

  1. Backend Server (already running)

  The backend is already running from our setup. If
  you need to restart it:

  # Kill existing backend if needed
  ps aux | grep uvicorn | grep -v grep | awk '{print 
  $2}' | xargs kill -9

  # Start backend
  cd /Users/raullg/GitHub/capstone-project
  source venv/bin/activate
  uvicorn backend.main:app --reload --host 0.0.0.0
  --port 8000

  2. Frontend Server

  Open a new terminal:

  cd /Users/raullg/GitHub/capstone-project/frontend
  npm start

  This will open your browser at
  http://localhost:3000

  3. Generate Documentation with CLI

  Open another terminal and use the docc command:

  cd /Users/raullg/GitHub/capstone-project
  source venv/bin/activate

  # Ask a question about any repository
  docc /path/to/any/repository "Your question here?"

  # Example with this repository
  docc /Users/raullg/GitHub/capstone-project "How 
  does the API routing work?"

  4. View in Browser

  After running docc, it will:
  1. Generate a session folder in sessions/
  2. Open your browser automatically with the session
   loaded
  3. You can also manually go to:
  http://localhost:3000?session=SESSION_NAME

  Example Commands to Try

  # Question about this project
  docc . "How does the text-to-speech caching work?"

  # Question about another project
  docc ~/some-other-project "What is the main entry 
  point of this application?"

  # With verbose output
  docc . "Explain the provider pattern used in this 
  codebase" --verbose

  Using Existing Sessions

  You already have a working session from our tests:
  1. Make sure frontend is running
  2. Go to: http://localhost:3000?session=capstone-pr
  oject_20250729_195942
  3. Use the video player controls to navigate
  through the explanation

  Tips

  - The backend and frontend need to be running for
  the web interface
  - The CLI (docc) can be used independently to
  generate sessions
  - Sessions are saved in the sessions/ folder
  - Audio generation requires valid API keys (will
  work without audio if not configured)
  - You can navigate between code blocks using the
  arrow buttons
  - The play button will auto-advance through blocks
  (audio won't work without valid keys)

  If Something Goes Wrong

  1. Check backend is running: curl 
  http://localhost:8000/api/v1/health
  2. Check frontend is running: Open
  http://localhost:3000
  3. Check Claude/OpenCode: Try claude --version or
  opencode --help
  4. Check logs: Backend logs appear in the terminal
  where you started uvicorn

  The app is fully functional for viewing
  documentation scripts! The main limitation is that
  Claude/OpenCode CLIs are timing out, but you can
  still view the previously generated session.